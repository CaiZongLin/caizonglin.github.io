{
    "version": "https://jsonfeed.org/version/1",
    "title": "Lex Blog • All posts by \"channel\" tag",
    "description": "",
    "home_page_url": "https://caizonglin.github.io",
    "items": [
        {
            "id": "https://caizonglin.github.io/2023/02/02/Golang%E7%9A%84Channel-2/",
            "url": "https://caizonglin.github.io/2023/02/02/Golang%E7%9A%84Channel-2/",
            "title": "Golang的Channel(2)",
            "date_published": "2023-02-02T03:45:00.000Z",
            "content_html": "<p><span id=\"0\"> <img data-src=\"https://i.imgur.com/IPZDBpj.png\" alt=\" \"> </span></p>\n<p>上一篇 <a href=\"/2023/02/01/Golang%E7%9A%84Channel-1/\" title=\"Golang的Channel(1)\">文章</a> 簡單介紹了channel 是什麼，以及如何使用以及一些該注意的地方，現在來介紹channel更深入的應用。</p>\n<h2 id=\"關閉Channel\"><a href=\"#關閉Channel\" class=\"headerlink\" title=\"關閉Channel\"></a>關閉Channel</h2><h3 id=\"Why？\"><a href=\"#Why？\" class=\"headerlink\" title=\"Why？\"></a>Why？</h3><p>為什麼要關閉channel呢？假設有一個情況是 <em>channel 的發送次數大於&#x2F;小於接收次數</em>，例如以下程式碼:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">   fmt.Println(<span class=\"string\">&quot;NumGoroutine:&quot;</span>, runtime.NumGoroutine()) <span class=\"comment\">// 2</span></span><br><span class=\"line\">   intChan := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 發送</span></span><br><span class=\"line\">   <span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++ &#123;</span><br><span class=\"line\">         intChan &lt;- i</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 接收</span></span><br><span class=\"line\">   <span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">         fmt.Println(&lt;-intChan) <span class=\"comment\">//0 , 1</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">   time.Sleep(time.Second*<span class=\"number\">3</span>)</span><br><span class=\"line\">   fmt.Println(<span class=\"string\">&quot;NumGoroutine:&quot;</span>, runtime.NumGoroutine()) <span class=\"comment\">// 3</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代碼可以看出，channel 的<em>發送次數</em>小於<em>接收次數</em>時，接收者go routine 由於等待發送者發送一直阻塞。因此接收者go routine 一直未退出，intChan 也由於一直被接收者使用無法被垃圾回收。未退出的go routine 和未被回收的channel 都造成了內存洩漏的問題。</p>\n<h3 id=\"How\"><a href=\"#How\" class=\"headerlink\" title=\"How?\"></a>How?</h3><p>直接上程式碼：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    intChan := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">    intChan &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">    intChan &lt;- <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"built_in\">close</span>(intChan)</span><br><span class=\"line\">    intChan &lt;- <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面我宣告一個channel，透過 <em>close</em>指令可以將它關閉。</p>\n<ol>\n<li><p>關閉後就不能在向channel內塞資料了</p>\n</li>\n<li><p>若向關閉的channel 塞資料，就會出現panic的錯誤</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panic: send on closed channel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以從被關閉的channel中取出資料</p>\n</li>\n</ol>\n<h2 id=\"用for-從channel內取資料\"><a href=\"#用for-從channel內取資料\" class=\"headerlink\" title=\"用for 從channel內取資料\"></a>用for 從channel內取資料</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;math/rand&quot;</span></span><br><span class=\"line\">    <span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">generateNumbers</span><span class=\"params\">(intChan <span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    count := <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> count != <span class=\"number\">6</span> &#123;</span><br><span class=\"line\">            num := rand.Intn(<span class=\"number\">10</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">            intChan &lt;- num</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;put num:&quot;</span>, num)</span><br><span class=\"line\">            count++</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">close</span>(intChan)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    intChan := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">go</span> generateNumbers(intChan)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num, ok := &lt;- intChan; ok &#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;isSuccess:%v value: %d\\n&quot;</span>, ok, num)</span><br><span class=\"line\">            time.Sleep(time.Second)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>程式碼說明:</p>\n<ul>\n<li><p>宣告一個channel，容量為1</p>\n</li>\n<li><p>開啟goroutine 產生數字丟進channel</p>\n</li>\n<li><p>用for 迴圈去取值，ok是前一章說過的判斷方式</p>\n</li>\n</ul>\n<p>這邊可以看到主程式這邊從 channel 取出資料的時候可以有兩個回傳值，第二個值是 bool 型態。代表 channel 裡面取不取的到資料。這個取不取得到資料看的是 channel 有沒有被關閉，只有當 channel 被關閉的時候這邊的 bool 值才會回傳 <em>false</em>，所以如果單純取資料的話如果取不到的話是會一直被 block 住的。</p>\n<hr>\n<p><a href=\"#0\">點此回到頁首</a></p>\n",
            "tags": [
                "channel"
            ]
        },
        {
            "id": "https://caizonglin.github.io/2023/02/01/Golang%E7%9A%84Channel-1/",
            "url": "https://caizonglin.github.io/2023/02/01/Golang%E7%9A%84Channel-1/",
            "title": "Golang的Channel(1)",
            "date_published": "2023-02-01T07:43:01.000Z",
            "content_html": "<p><span id=\"0\"> <img data-src=\"https://i.imgur.com/IPZDBpj.png\" alt=\" \"> </span></p>\n<h2 id=\"Channel-是什麼？\"><a href=\"#Channel-是什麼？\" class=\"headerlink\" title=\"Channel 是什麼？\"></a>Channel 是什麼？</h2><p><img data-src=\"https://i.imgur.com/mdRUDti.png\" alt=\"Channel 示意圖\"></p>\n<p>channel能夠在多個goroutine之間作數據交換，像是在公共場所很多人的情況下, 大家在遵守著排隊的習慣, 目的是避免擁擠、插隊導致的低效資源使用與交換過程。</p>\n<ul>\n<li>chan的空值是nil</li>\n<li>聲明完通道後, 要透過make來產生實例</li>\n<li>發送資料 &lt;- , 通道變數 &lt;- 值</li>\n</ul>\n<h2 id=\"宣告一個Channel\"><a href=\"#宣告一個Channel\" class=\"headerlink\" title=\"宣告一個Channel\"></a>宣告一個Channel</h2><ol>\n<li>var 通道名稱 chan 通道類型</li>\n<li>chan的空值是nil</li>\n<li>聲明完通道後, 要透過<strong>make</strong>來產生實例</li>\n<li>通道實例 :&#x3D; make(chan 通類類型, [bufferSize int])</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt <span class=\"keyword\">chan</span> <span class=\"type\">int</span></span><br><span class=\"line\">    fmt.Println(chanInt) <span class=\"comment\">//nil</span></span><br><span class=\"line\">    chanInt = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>宣告的時候需要加上 chan keyword 再加上 管道裡面要放怎樣型態的 element，所以上面的例子來看：var chanInt chan int 代表了宣告了一個叫做 chanInt 的變數，這個變數是 chan 型態，裡面可以放 int 型態的 element</li>\n<li>如果只有單純宣告就輸出的話，會輸出成 nil</li>\n</ul>\n<h2 id=\"向通道塞入元素\"><a href=\"#向通道塞入元素\" class=\"headerlink\" title=\"向通道塞入元素\"></a>向通道塞入元素</h2><h3 id=\"錯誤用法\"><a href=\"#錯誤用法\" class=\"headerlink\" title=\"錯誤用法\"></a>錯誤用法</h3><p>如果宣告完 channel 就直接往裡面放元素 <code>(沒有make)</code> 會導致以下錯誤：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt <span class=\"keyword\">chan</span> <span class=\"type\">int</span></span><br><span class=\"line\">    fmt.Println(chanInt)</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetal <span class=\"keyword\">error</span>: all goroutines are asleep - deadlock!</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"正確用法\"><a href=\"#正確用法\" class=\"headerlink\" title=\"正確用法\"></a>正確用法</h3><p>應該是要宣告的時候同時也要進行初始化(make)的動作：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt <span class=\"keyword\">chan</span> <span class=\"type\">int</span></span><br><span class=\"line\">    chanInt = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">10</span></span><br><span class=\"line\">    fmt.Println(&lt;- chanInt)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>透過 make 給予管道內的容量為 1，代表可以放一個元素</li>\n<li>透過 &lt;- 來放進元素，透過 &lt;- 放在 channel 變數就代表取出管道內的元素，因此這邊就會輸出為 10</li>\n</ul>\n<p>我們可以透過 *len()<em>、</em>cap()*來確認是否真的有從通道中取到元素。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt <span class=\"keyword\">chan</span> <span class=\"type\">int</span></span><br><span class=\"line\">    chanInt = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    fmt.Println(<span class=\"built_in\">len</span>(chanInt)) <span class=\"comment\">//0</span></span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">10</span></span><br><span class=\"line\">    fmt.Println(<span class=\"built_in\">len</span>(chanInt)) <span class=\"comment\">//1</span></span><br><span class=\"line\">    fmt.Println(&lt;- chanInt) <span class=\"comment\">//10 </span></span><br><span class=\"line\">    fmt.Println(<span class=\"built_in\">len</span>(chanInt)) <span class=\"comment\">//0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這邊用len()取得的是通道內<strong>元素的數量</strong>，所以第一個會是0。<br>當做了這個動作 <code>chanInt &lt;- 10</code>，意思是往這個通道塞入一個元素，所以數量會變成1，而在把它取出後，通道內元素就會變回0。</p>\n</blockquote>\n<h2 id=\"特別注意\"><a href=\"#特別注意\" class=\"headerlink\" title=\"特別注意\"></a>特別注意</h2><p>channel內的數量一旦滿了之後，再往裡面放元素會造成 block 的動作，除非有取出的動作不然就會被<em>block</em>住，如下:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">2</span></span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">3</span></span><br><span class=\"line\">    &lt;- chanInt</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>這樣就可以往裡面放 4，然後取出來的元素可以給一個變數或是也不給，不給的話就像上面那樣單純取出來就可以了。</p>\n</blockquote>\n<p>這邊可以注意的是，取出來的順序是先進先出，所以這邊取出來是取出 1。可以輸出來做驗證：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chanInt = <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">2</span></span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">3</span></span><br><span class=\"line\">    b := &lt;- chanInt</span><br><span class=\"line\">    chanInt &lt;- <span class=\"number\">4</span></span><br><span class=\"line\">    fmt.Println(b)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h2><p>今天先介紹到這邊，再來會介紹一些channel的其他功能以及應用。謝謝觀看 :)</p>\n<hr>\n<p><a href=\"#0\">點此回到頁首</a></p>\n",
            "tags": [
                "channel"
            ]
        }
    ]
}
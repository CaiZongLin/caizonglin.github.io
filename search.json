[{"title":"Golang的Interface(1)","url":"/2023/01/31/Golang%E7%9A%84Interface-1/","content":"<p><img data-src=\"https://i.imgur.com/ZKmjAyq.png\" alt=\" \"><br>interface 在這裡有兩個意思</p>\n<ul>\n<li>一個代表『泛用型別』</li>\n<li>一個代表類似傳統 OOP(Object-oriented programming)</li>\n</ul>\n<p>讓我們簡單的介紹一下。</p>\n<h2 id=\"Interface-為泛用型別-任意值\"><a href=\"#Interface-為泛用型別-任意值\" class=\"headerlink\" title=\"Interface 為泛用型別(任意值)\"></a>Interface 為泛用型別(任意值)</h2><p>有些時候你可能會看見像下面這樣的 Interface。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ABC</span><span class=\"params\">(value <span class=\"keyword\">interface</span>&#123;&#125;)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這種時候的 <strong>interface{}</strong> 意味著可以填入任何型態的值。比如 <em>int</em>, <em>string</em> , 或是 <em>struct</em> 等皆可以，這會讓程式比較富有彈性。</p>\n<h3 id=\"型態斷言\"><a href=\"#型態斷言\" class=\"headerlink\" title=\"型態斷言\"></a>型態斷言</h3><p>但凡事有利必有弊，因為傳入的值可以是任何型態，這時候就需要透過 <strong>型態斷言(Type Assertion)</strong> 來宣告 <strong>Interface{}</strong> 的真正型態，才可以在後續做應用。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ABC</span><span class=\"params\">(value <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;  </span><br><span class=\"line\">    <span class=\"comment\">// 透過型態斷言判斷 interface&#123;&#125; 真正的型態。</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> v := value.(<span class=\"keyword\">type</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果 value 是string型態。</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">string</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;value 型態是字串，內容是 %s \\n&quot;</span> + v)</span><br><span class=\"line\">        <span class=\"comment\">// 如果 value 是 int 型態。</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">int</span>:</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;value 型態是int，乘以10就是 %d\\n&quot;</span>, v * <span class=\"number\">10</span> )</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;value 變數型態為%T\\n&quot;</span>, v)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"型態宣告\"><a href=\"#型態宣告\" class=\"headerlink\" title=\"型態宣告\"></a>型態宣告</h3><p>如果你很確定地知道 <strong>interface{}</strong> 是什麼型態，可以直接透過 <em>value.(型態)</em> 進行宣告。<br>但請注意，若型態不正確，則會發生 <em>panic</em>，最好的方式還是加上ok來判斷</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> dog, ok := value.(<span class=\"type\">int</span>); ok &#123;</span><br><span class=\"line\">    <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> car, ok := value.(<span class=\"type\">string</span>); ok &#123;</span><br><span class=\"line\">    <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Interface-為介面定義\"><a href=\"#Interface-為介面定義\" class=\"headerlink\" title=\"Interface 為介面定義\"></a>Interface 為介面定義</h2><p>這裡的介面指的是Interface，也就是俗稱的 <strong>「接口」</strong> 。 你可以透過Interface 定義一個接口並讓別人加以實作，下面看一下範例</p>\n<h3 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h3><p>假設你需要定義一個資料庫接口，支援寫入和讀取的功能；但因為業務需求，會同時使用兩種資料庫，而你不想把它寫死城僅支援某一種資料庫時，就可以使用 <strong>Interface</strong> 定義一個接口，如下所示。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Database 是一個介面定義，用來讓第三方開發者定義自己的資料庫使用方式，就像一種規範。</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Database <span class=\"keyword\">interface</span> &#123;  </span><br><span class=\"line\">    <span class=\"comment\">// Read 從資料庫中讀取內容。</span></span><br><span class=\"line\">    Read()</span><br><span class=\"line\">    <span class=\"comment\">// Write 將內容寫入至資料庫。</span></span><br><span class=\"line\">    Write()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這表示現在我們可以遵循 <strong>Databease</strong> 這個Interface，開始支援更多的資料庫。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// MySQL 會實作 Database 介面。</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> MySQL <span class=\"keyword\">struct</span> &#123;&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(m MySQL)</span></span> Read() &#123;&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(m MySQL)</span></span> Write() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Redis 會實作 Database 介面。</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Redis <span class=\"keyword\">struct</span> &#123;&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r Redis)</span></span> Read() &#123;&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r Redis)</span></span> Write() &#123;&#125;  </span><br></pre></td></tr></table></figure>\n\n<p>現在，我們只需要將 <em>MySQL</em> 或 <em>Redis</em> 傳入 <strong>New()</strong> 函式內，就會被實作成 <strong>Database</strong> 介面，就可以對資料庫進行讀取以及寫入的動作了!</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// New 會將接收到的物件以 Database 實作，並且呼叫相關函式對資料庫進行操作。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">New</span><span class=\"params\">(db Database)</span></span> &#123;  </span><br><span class=\"line\">    <span class=\"comment\">// 讀取資料庫。</span></span><br><span class=\"line\">    db.Read()</span><br><span class=\"line\">    <span class=\"comment\">// 寫入資料庫。</span></span><br><span class=\"line\">    db.Write()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 將建構體傳入 New 就會被實作成 Database。</span></span><br><span class=\"line\">New(MySQL&#123;&#125;)  </span><br><span class=\"line\">New(Redis&#123;&#125;)  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"實作條件\"><a href=\"#實作條件\" class=\"headerlink\" title=\"實作條件\"></a>實作條件</h3><p>實作 Interface 的時候有件事情要注意，那就是欲實作的<strong>Struct</strong>必須要有 Interface 所定義的所有函式包含<em>接收參數</em>、<em>回傳值</em>，否則 Golang 會表明無法實作該 Interface 因為缺少某某條件。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Database <span class=\"keyword\">interface</span> &#123;  </span><br><span class=\"line\">    Read(<span class=\"type\">string</span>) <span class=\"type\">string</span></span><br><span class=\"line\">    Write(<span class=\"type\">string</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如上例，Read 一定要接收一個字串，並回傳一個字串、Write必須接收一個字串。</p>\n<p>Golang 也允許你在定義接口時擺上參數名稱好讓你辨認參數的作用，且實作時你可以不需要遵循此參數名稱。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Database <span class=\"keyword\">interface</span> &#123;  </span><br><span class=\"line\">    Read(name <span class=\"type\">string</span>) <span class=\"type\">string</span></span><br><span class=\"line\">    Write(data <span class=\"type\">string</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Golang"]},{"title":"Golang的Interface(2)","url":"/2023/01/31/Golang%E7%9A%84Interface-2/","content":"<p><img data-src=\"https://i.imgur.com/K0jOddb.png\" alt=\" \"></p>\n<h2 id=\"Interface-繼承\"><a href=\"#Interface-繼承\" class=\"headerlink\" title=\"Interface 繼承\"></a>Interface 繼承</h2><p>一個自定義型態是可以實現多個 interface 的。此外，interface 也可以繼承別的 interface 的行為，用下面來舉例:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Animal <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Eat()</span><br><span class=\"line\">    Run()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Dog <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *Dog)</span></span> Eat() &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">&quot;%s is eating\\n&quot;</span>, d.Name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *Dog)</span></span> Run() &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">&quot;%s is running\\n&quot;</span>, d.Name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoEat</span><span class=\"params\">(animal Animal)</span></span> &#123;</span><br><span class=\"line\">    animal.Eat()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoRun</span><span class=\"params\">(animal Animal)</span></span> &#123;</span><br><span class=\"line\">    animal.Run()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    dog := Dog&#123;Name:<span class=\"string\">&quot;Jason&quot;</span>&#125;</span><br><span class=\"line\">    GoEat(&amp;dog)</span><br><span class=\"line\">    GoRun(&amp;dog)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>先簡單複習一下，這邊建立了一個Animal 型態的接口，並定義了Eat() &amp;&amp; Run() 來表達動物都會擁有的行為。</li>\n<li>建立Dog struct 並且實作了接口內的 Eat() &amp;&amp; Run()。 這邊要注意，在實作時需要用指標 <em><strong>(d *Dog)</strong></em> 否則會導致淺複製的行為，並不是操作同一個Struct。</li>\n<li>建立GoEat() &amp;&amp; GoRun()，並將參數型態用Animal</li>\n</ol>\n<p>接下來是繼承的部分:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Eater <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Eat()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Runner <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Run()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Animal <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Eater</span><br><span class=\"line\">    Runner</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Dog <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *Dog)</span></span> Eat() &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">&quot;%s is eating\\n&quot;</span>, d.Name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(d *Dog)</span></span> Run() &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">&quot;%s is running\\n&quot;</span>, d.Name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoEat</span><span class=\"params\">(animal Animal)</span></span> &#123;</span><br><span class=\"line\">    animal.Eat()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoRun</span><span class=\"params\">(animal Animal)</span></span> &#123;</span><br><span class=\"line\">    animal.Run()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoEat2</span><span class=\"params\">(eater Eater)</span></span> &#123;</span><br><span class=\"line\">    eater.Eat()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GoRun2</span><span class=\"params\">(runner Runner)</span></span> &#123;</span><br><span class=\"line\">    runner.Run()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    dog := Dog&#123;Name:<span class=\"string\">&quot;Kenny&quot;</span>&#125;</span><br><span class=\"line\">    GoEat(&amp;dog)</span><br><span class=\"line\">    GoRun(&amp;dog)</span><br><span class=\"line\">    GoEat2(&amp;dog)</span><br><span class=\"line\">    GoRun2(&amp;dog)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在 Animal interface 透過<code>內嵌</code>的方式，將 Eater、Runner 接口定義的行為放進去。這樣Dog Struct必須實作 Eat() &amp;&amp; Run() 才能算是Animal的一種。代表Dog Struct 也是Eater 及 Runner的一種。<br>所以後面定義的GoEat2() &amp;&amp; GoRun2()也可以接受Dog Struct</p>\n</blockquote>\n<h2 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h2><ul>\n<li><p>Golang Interface 重點是 <strong>行為</strong>，不管定義的介面型態是什麼，只要行為符合就屬於該介面型態的一種。(鴨子型別 <em>Duck typing</em>)</p>\n</li>\n<li><p>利用 Interface 可實現泛型、多型的功能，從而可以調用同一個函數名的函數但實現完全不同的功能。</p>\n</li>\n</ul>\n","categories":["Golang"]},{"title":"MarkDown","url":"/2023/01/17/Markdown/","content":"<p><span id=\"0\"> </span></p>\n<h1 id=\"MarkDown-入門\"><a href=\"#MarkDown-入門\" class=\"headerlink\" title=\"MarkDown 入門\"></a><center>MarkDown 入門</center></h1><ul>\n<li>基本用法<ul>\n<li><a href=\"#1\">副標</a></li>\n<li><a href=\"#2\">字體大小</a></li>\n<li><a href=\"#3\">字體效果</a></li>\n<li><a href=\"#4\">引文</a></li>\n<li><a href=\"#5\">標號</a></li>\n<li><a href=\"#6\">連結</a></li>\n<li><a href=\"#7\">定義清單</a></li>\n<li><a href=\"#8\">分隔線</a></li>\n<li><a href=\"#9\">程式碼</a></li>\n<li><a href=\"#10\">標籤連結</a></li>\n<li><a href=\"#11\">圖片</a></li>\n<li><a href=\"#12\">圖片連結</a></li>\n<li><a href=\"#13\">表格</a></li>\n<li><a href=\"#14\">短區塊</a></li>\n<li><a href=\"#15\">CheckBox</a></li>\n<li><a href=\"#16\">跳脫字元</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"副標\"><a href=\"#副標\" class=\"headerlink\" title=\"副標\"></a><span id=\"1\">副標</span></h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">副標     </span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字體大小\"><a href=\"#字體大小\" class=\"headerlink\" title=\"字體大小\"></a><span id=\"2\">字體大小</span></h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># H1</span></span><br><span class=\"line\"><span class=\"comment\">## H2</span></span><br><span class=\"line\"><span class=\"comment\">### H3</span></span><br><span class=\"line\"><span class=\"comment\">#### H4</span></span><br><span class=\"line\"><span class=\"comment\">##### H5</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"字體效果\"><a href=\"#字體效果\" class=\"headerlink\" title=\"字體效果\"></a><span id=\"3\">字體效果</span></h2><p><em>斜體字</em><br><strong>粗體字</strong><br><em><strong>斜體兼粗體</strong></em><br><del>刪除線</del><br><em>斜體2</em><br><strong>斜粗2</strong><br>正常<sup>上標</sup><br>正常<sub>下標</sub><br><u>底線</u><br><font color=#008000>顏色</font></p>\n<blockquote>\n<p>顏色部分可以到 <a href=\"https://www.ifreesite.com/color/web-color-code.htm\">常用顏色表</a> 查詢</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">*斜體字*</span><br><span class=\"line\">**粗體字**</span><br><span class=\"line\">***斜體兼粗體***</span><br><span class=\"line\">~~刪除線~~</span><br><span class=\"line\">*斜體2*</span><br><span class=\"line\">**斜粗2**</span><br><span class=\"line\">正常&lt;sup&gt;上標&lt;/sup&gt;</span><br><span class=\"line\">正常&lt;sub&gt;下標&lt;/sub&gt;</span><br><span class=\"line\">&lt;u&gt;底線&lt;/u&gt;</span><br><span class=\"line\">&lt;font color=<span class=\"comment\">#008000&gt;顏色&lt;/font&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a><span id=\"4\">引文</span></h2><blockquote>\n<p>縮排語法<br>第一層</p>\n<blockquote>\n<p>第二層</p>\n<blockquote>\n<p>第三層</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;第一層</span><br><span class=\"line\">&gt;&gt;第二層</span><br><span class=\"line\">&gt;&gt;&gt;第三層</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"標號\"><a href=\"#標號\" class=\"headerlink\" title=\"標號\"></a><span id=\"5\">標號</span></h2><ol>\n<li>數字標號</li>\n<li>數字標號</li>\n<li>數字標號</li>\n</ol>\n<ul>\n<li>其他標號</li>\n</ul>\n<ul>\n<li>其他標號</li>\n</ul>\n<ul>\n<li>其他標號</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1. 數字標號</span><br><span class=\"line\">2. 數字標號</span><br><span class=\"line\">3. 數字標號</span><br><span class=\"line\">- 其他標號</span><br><span class=\"line\">+ 其他標號</span><br><span class=\"line\">* 其他標號</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"連結\"><a href=\"#連結\" class=\"headerlink\" title=\"連結\"></a><span id=\"6\">連結</span></h2><p><a href=\"https://google.com/\">連結名稱</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[連結名稱](網址)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"定義清單\"><a href=\"#定義清單\" class=\"headerlink\" title=\"定義清單\"></a><span id=\"7\">定義清單</span></h2><dl><dt>名詞1</dt><dd>解釋1</dd></dl><dl><dt>名字2</dt><dd>解釋2</dd></dl><p>名詞 3<br>~ 定義 3<br>~ 定義 3</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">名詞1</span><br><span class=\"line\">: 解釋1</span><br><span class=\"line\"></span><br><span class=\"line\">名字2</span><br><span class=\"line\">: 解釋2</span><br><span class=\"line\"></span><br><span class=\"line\">名詞 3</span><br><span class=\"line\">~ 定義 3</span><br><span class=\"line\">~ 定義 3</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"分隔線\"><a href=\"#分隔線\" class=\"headerlink\" title=\"分隔線\"></a><span id=\"8\">分隔線</span></h2><ol>\n<li></li>\n</ol>\n<hr>\n<ol start=\"2\">\n<li></li>\n</ol>\n<hr>\n<ol start=\"3\">\n<li></li>\n</ol>\n<hr>\n<ol start=\"4\">\n<li></li>\n</ol>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.</span><br><span class=\"line\">空行</span><br><span class=\"line\">---</span><br><span class=\"line\">2.</span><br><span class=\"line\">***</span><br><span class=\"line\">3.</span><br><span class=\"line\">- - -</span><br><span class=\"line\">4.</span><br><span class=\"line\">* * *</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a><span id=\"9\">程式碼</span></h2><figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\"> <span class=\"string\">&quot;context&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;encoding/json&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;example/test/used&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\"> <span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> gpt3 <span class=\"string\">&quot;github.com/sashabaranov/go-gpt3&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\"> apiKey     = <span class=\"string\">&quot;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&quot;</span></span><br><span class=\"line\"> weatherKey = <span class=\"string\">&quot;CWB-6A11B731-F671-4A4C-B6D6-B401AE2DF2EB&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"> <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>`&#96;&#96;程式類型<br>程式內容<br>`&#96;&#96;</p>\n<hr>\n<h2 id=\"連結-1\"><a href=\"#連結-1\" class=\"headerlink\" title=\"連結\"></a><span id=\"10\">連結</span></h2><p><a href=\"http://google.com/\" title=\"游標顯示\">Google</a><br><a href=\"http://search.yahoo.com/\" title=\"游標顯示\">Yahoo</a><br><a href=\"http://search.msn.com/\" title=\"游標顯示\">MSN</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Google][1]</span><br><span class=\"line\">[Yahoo][2]</span><br><span class=\"line\">[MSN][3]</span><br><span class=\"line\"></span><br><span class=\"line\">  [1]: http://google.com/      </span><br><span class=\"line\">  [2]: http://search.yahoo.com/</span><br><span class=\"line\">  [3]: http://search.msn.com/  </span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"圖片\"><a href=\"#圖片\" class=\"headerlink\" title=\"圖片\"></a><span id=\"11\">圖片</span></h2><p><img data-src=\"https://i.imgur.com/5xkYoph.png\" alt=\"測試圖片\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">![圖片名稱](連結)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"圖片連結\"><a href=\"#圖片連結\" class=\"headerlink\" title=\"圖片連結\"></a><span id=\"12\">圖片連結</span></h2><p><a href=\"https://www.google.com/search?q=Golang&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjx7saE8e78AhXhUfUHHY-4AaQQ_AUoAXoECDIQAw&biw=1680&bih=943&dpr=2#imgrc=B8BCI6NN0ok1JM\"><img data-src=\"https://i.imgur.com/5xkYoph.png\" alt=\"測試圖片\"></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">[![圖片](圖片網址)](連結網址)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a><span id=\"13\">表格</span></h2><table>\n<thead>\n<tr>\n<th align=\"left\">欄位1</th>\n<th align=\"right\">欄位2</th>\n<th align=\"center\">欄位3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">置左</td>\n<td align=\"right\">置右</td>\n<td align=\"center\">置中</td>\n</tr>\n<tr>\n<td align=\"left\">$100</td>\n<td align=\"right\">$100</td>\n<td align=\"center\">$100</td>\n</tr>\n<tr>\n<td align=\"left\">$10</td>\n<td align=\"right\">$10</td>\n<td align=\"center\">$10</td>\n</tr>\n<tr>\n<td align=\"left\">$1</td>\n<td align=\"right\">$1</td>\n<td align=\"center\">$1</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">| 欄位1 | 欄位2 | 欄位3 |</span><br><span class=\"line\">| :-- | --: |:--:| &lt;-只需打一次</span><br><span class=\"line\">| 置左  | 置右 | 置中 |</span><br><span class=\"line\">| <span class=\"variable\">$100</span> | <span class=\"variable\">$100</span> | <span class=\"variable\">$100</span> |</span><br><span class=\"line\">| <span class=\"variable\">$10</span> | <span class=\"variable\">$10</span> | <span class=\"variable\">$10</span> |</span><br><span class=\"line\">| <span class=\"variable\">$1</span> | <span class=\"variable\">$1</span> | <span class=\"variable\">$1</span> |</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"短區塊\"><a href=\"#短區塊\" class=\"headerlink\" title=\"短區塊\"></a><span id=\"14\">短區塊</span></h2><p><code>測試內容</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">`測試內容`</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"CheckBox\"><a href=\"#CheckBox\" class=\"headerlink\" title=\"CheckBox\"></a><span id=\"15\">CheckBox</span></h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 已完成</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">- [ ] 未完成</span><br><span class=\"line\">- [x] 已完成</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"跳脫字元\"><a href=\"#跳脫字元\" class=\"headerlink\" title=\"跳脫字元\"></a><span id=\"16\">跳脫字元</span></h2><p>###<br>`&#96;&#96;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\+任意符號 (反斜線)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><a href=\"#0\">點此回到頁首</a></p>\n","categories":["Markdown"]},{"title":"Hello World","url":"/2023/01/17/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}]